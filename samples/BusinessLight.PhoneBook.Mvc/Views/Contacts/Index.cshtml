@model SearchContactViewModel
@{
    ViewBag.Title = "Contacts";
}

<h2>@ViewBag.Title</h2>
@using (Html.BeginForm("Index", "Contacts", FormMethod.Post, new { @class = "form-inline" }))
{

    @Html.ValidationSummary(false, string.Empty, new { @class = "text-danger" })

    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title">
                <span class="glyphicon glyphicon-filter" aria-hidden="true"></span> Filter
            </h3>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.LabelFor(x => x.PagedFilter.FirstName, new { @class = "control-label col-sm-4" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(x => x.PagedFilter.FirstName, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.LabelFor(x => x.PagedFilter.LastName, new { @class = "control-label col-sm-4" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(x => x.PagedFilter.LastName, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.LabelFor(x => x.PagedFilter.PageSize, new { @class = "control-label col-sm-4" })
                        <div class="col-sm-8">
                            @Html.DropDownListFor(x => x.PagedFilter.PageSize, Model.PageSizeItems, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        <div class="col-sm-offset-2 col-sm-10">
                            <button type="submit" class="btn btn-primary">
                                <span class="glyphicon glyphicon-search" aria-hidden="true"></span> Search
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <p>
        <a href="@Url.Action("Create")" class="btn btn-success">
            <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> Create
        </a>
    </p>
    if (Model.PagedResult != null)
    {
        if (Model.PagedResult.PagingInfo.TotalItemCount > 0)
        {
            if (Model.PagedResult.PagingInfo.PageCount > 1)
            {
                @Html.Pager(Model)
            }
            <table class="table table-bordered table-striped">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.PagedResult.Result.First().FirstName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PagedResult.Result.First().LastName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PagedResult.Result.First().BirthDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PagedResult.Result.First().ContactInfosCount)
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model.PagedResult.Result)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BirthDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ContactInfosCount)
                        </td>
                        <td>
                            <a href="@Url.Action("Edit", new {id = item.Id})" class="btn btn-primary">
                                <span class="glyphicon glyphicon-edit" aria-hidden="true"></span> Edit
                            </a>
                            <a href="@Url.Action("Delete", new {id = item.Id})" class="btn btn-danger">
                                <span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span> Remove
                            </a>
                        </td>
                    </tr>
                }

            </table>
            if (Model.PagedResult.PagingInfo.PageCount > 1)
            {
                @Html.Pager(Model)
            }
        }
        else
        {
            <div class="alert alert-info">
                No results available for the current search filter.
            </div>
        }
    }

}